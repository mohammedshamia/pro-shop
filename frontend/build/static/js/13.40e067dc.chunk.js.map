{"version":3,"sources":["components/FormContainer.js","redux/cart/cartSelectors.js","redux/cart/cartActions.js","components/CheckoutSteps.js","screens/PaymentPage.js"],"names":["FormContainer","children","className","xs","md","cartSelector","state","cart","cartItemsSelector","createSelector","cartItems","shippingAddressSelector","shippingAddress","fullCartSelector","paymentMethod","addCartItem","id","qty","dispatch","getState","a","axios","get","data","type","ADD_CART_ITEM","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","removeFromCart","REMOVE_CART_ITEM","saveShippingAddress","CART_SAVE_SHIPPING_ADDRESS","savePaymentMethod","CART_SAVE_PAYMENT_METHOD","CheckoutSteps","step1","step2","step3","step4","userInfo","useSelector","userInfoSelector","Item","Link","to","disabled","PaymentPage","history","push","useState","setPaymentMethod","useDispatch","onSubmit","e","preventDefault","Group","Label","as","Check","label","value","checked","onChange","target","variant"],"mappings":"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","file":"static/js/13.40e067dc.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import { createSelector } from \"reselect\";\n\nconst cartSelector = (state) => state.cart;\n\nexport const cartItemsSelector = createSelector(\n  cartSelector,\n  (cart) => cart.cartItems\n);\n\nexport const shippingAddressSelector = createSelector(\n  cartSelector,\n  (cart) => cart.shippingAddress\n);\n\nexport const paymentMethodSelector = createSelector(\n  cartSelector,\n  (cart) => cart.paymentMethod\n);\n\nexport const fullCartSelector = createSelector(cartSelector, (cart) => cart);\n","import {\n  ADD_CART_ITEM,\n  REMOVE_CART_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from \"./cartConstants\";\nimport axios from \"axios\";\n\nexport const addCartItem = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: ADD_CART_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: REMOVE_CART_ITEM,\n    payload: id,\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  });\n\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\n};\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { userInfoSelector } from \"../redux/user/userSelectors\";\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  const userLogin = useSelector(userInfoSelector);\n  const { userInfo } = userLogin;\n\n  return (\n    <Nav className=\"justify-content-center mb-4\">\n      <Nav.Item>\n        {step1 && userInfo ? (\n          <Nav.Link>Sign In</Nav.Link>\n        ) : (\n          <LinkContainer to=\"/login\">\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to=\"/shipping\">\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to=\"/payment\">\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to=\"/placeorder\">\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  );\n};\n\nexport default CheckoutSteps;\n","import React, { useState } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { shippingAddressSelector } from \"../redux/cart/cartSelectors\";\nimport { savePaymentMethod } from \"../redux/cart/cartActions\";\n\nconst PaymentPage = ({ history }) => {\n  const shippingAddress = useSelector(shippingAddressSelector);\n\n  if (!shippingAddress) {\n    history.push(\"/shipping\");\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal or Credit Card\"\n              id=\"PayPal\"\n              name=\"paymentMethod\"\n              value=\"PayPal\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            />\n            {/* <Form.Check\n              type='radio'\n              label='Stripe'\n              id='Stripe'\n              name='paymentMethod'\n              value='Stripe'\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentPage;\n"],"sourceRoot":""}